


# Action 
random_action : true
discount_factor : 0.9
abstract_dim : 2
buffer_len : 10000
batch_size : 32
device : "cuda:0"

# Training Config
env : maze
n_envs : 4
timesteps : 1e6
target_update_freq : 1
learning_rate : 0.0005
weight_decay : 0
beta : 0.20
ld_lambda : 0.0
model_lambda : 0.0
epsilon_init : 0.9
epsilon_final : 0.1

# Utils
log_freq : 100
checkpoint_freq : 


# --- Network Candidates ----
act: &act Tanh
encoder_: &encoder_
  - [Conv2d, auto, 8, { kernel_size: 2, stride: 1, padding: same}]
  - *act
  - [Conv2d, 8, 16, { kernel_size: 2, stride: 1, padding: same}]
  - *act
  - [MaxPool2d, { kernel_size: 2 }]
  - [Conv2d, 16, 32, { kernel_size: 3, stride: 1, padding: same}]
  - *act
  - [MaxPool2d, { kernel_size: 2 }]
  - [Conv2d, 32, 2, { kernel_size: 1, stride: 1, padding: same}]

q : &q
  - [Conv2d, 2, 16, { kernel_size: 2, stride: 1, padding: same}]
  - *act
  - [Conv2d, 16, 32, { kernel_size: 3, stride: 1, padding: same}]
  - *act
  - [MaxPool2d, { kernel_size: 2 }]
  - [Conv2d, 32, 16, { kernel_size: 2, stride: 1, padding: same}]
  - *act
  - [Conv2d, 16, 4, { kernel_size: 1, stride: 1, padding: same}]
  - *act
  - [Flatten, { }]
  - [Linear, 6, 200, {}]
  - *act
  - [Linear, 200, 50, {}]
  - *act
  - [Linear, 50, 20, {}]
  - *act
  - [Linear, 20, 2, {}]

transition: &transition
  - [Conv2d, 2, 16, { kernel_size: 1, stride: 1, padding: same}]
  - *act
  - [Conv2d, 16, 32, { kernel_size: 2, stride: 1, padding: same}]
  - *act
  - [Conv2d, 32, 64, { kernel_size: 3, stride: 1, padding: same}]
  - *act
  - [Conv2d, 64, 32, { kernel_size: 2, stride: 1, padding: same}]
  - *act
  - [Conv2d, 32, 16, { kernel_size: 1, stride: 1, padding: same}]
  - *act

reward_gamma : &reward_gamma
  - [Conv2d, 2, 16, { kernel_size: 2, stride: 1, padding: same}]
  - *act
  - [Conv2d, 16, 32, { kernel_size: 3, stride: 1, padding: same}]
  - *act
  - [MaxPool2d, { kernel_size: 2 }]
  - [Conv2d, 32, 16, { kernel_size: 2, stride: 1, padding: same}]
  - *act
  - [Conv2d, 16, 4, { kernel_size: 1, stride: 1, padding: same}]
  - *act
  - [Flatten, { }]
  - [Linear, 6, 200, {}]
  - *act
  - [Linear, 200, 50, {}]
  - *act
  - [Linear, 50, 20, {}]
  - *act
  - [Linear, 20, 1, {}]


# --- Models ---
encoder: *encoder_
q_net: *q
transition_net: *transition
reward_net: *reward_gamma
discount_net: *reward_gamma

